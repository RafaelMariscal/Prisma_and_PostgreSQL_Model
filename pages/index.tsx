import Head from 'next/head'
import { Container, Divider, Header } from 'semantic-ui-react'
import { Prisma } from '.prisma/client';
import prisma from '../lib/prisma';
import { useState } from 'react';
import EditForm from '../components/EditForm';
import UsersTable from '../components/UsersTable';
import AddUserForm from '../components/AddUserForm';

export async function getServerSideProps() {
  const users: Prisma.UserUncheckedCreateInput[] = await prisma.user.findMany()
  return {
    props: { initialUsers: users }
  }
}

export default function Home({ initialUsers }) {
  const [users, setUsers] = useState<Prisma.UserUncheckedUpdateInput[] | Prisma.UserUncheckedCreateInput[]>(initialUsers)
  const [isEditUserModalOn, setIsEditUserModalOn] = useState(false)
  const [userToBeEdited, setUserToBeEdited] = useState<Prisma.UserUncheckedUpdateInput | Prisma.UserUncheckedCreateInput>({})

  function toggleEditUserForm() {
    setIsEditUserModalOn(!isEditUserModalOn)
  }

  return (
    <>
      <Head>
        <title>Prisma and PostgreSQL CRUD</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="stylesheet" href="http://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css" />
        <link rel="shortcut icon" href="./prismaIcon.png" />
      </Head>

      <Container style={isEditUserModalOn ? { opacity: "0.25" } : { margin: 20 }}>
        <Header as={"h2"} textAlign={"center"}>
          A NextJs | Prisma | Docker | PostgreSQL CRUD model
        </Header>

        <Header as={"h3"}>
          Add a New User:
        </Header>

        <AddUserForm users={users} setUsers={setUsers} />

        <Divider horizontal>Users</Divider>

        <UsersTable
          users={users}
          setUsers={setUsers}
          setUserToBeEdited={setUserToBeEdited}
          toggleEditUserForm={toggleEditUserForm}
        />

      </Container>

      <Container style={!isEditUserModalOn ? { display: "none" } : { padding: 20, width: "100vw", height: "100vh", position: "absolute", top: 0, left: 0, backgroundColor: "rgba(0,0,0,0.25)", display: "grid", placeItems: "center" }}>
        <Container style={{ backgroundColor: "white", padding: "30px", borderRadius: "8px", boxShadow: "0 0 .5rem rgba(0,0,0,0.25)" }}>
          <Header as={"h3"}>
            Edit Form
          </Header>

          {userToBeEdited.id ? (
            <EditForm
              users={users}
              setUsers={setUsers}
              toggleEditUserForm={toggleEditUserForm}
              setUserToBeEdited={setUserToBeEdited}
              userToBeEdited={userToBeEdited}
            />
          ) : ""}

        </Container>
      </Container >

    </>
  )
}
